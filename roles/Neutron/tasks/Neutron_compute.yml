---
- name: check if host is in target group before start tasks
  block:
    - name: debug if host is not in compute group
      ansible.builtin.debug:
        msg: "Host {{ inventory_hostname }} is not in compute group, stopping execution"
      when: "'compute' not in group_names"

    - name: stop running role on hosts not in compute
      meta: end_host
      when: "'compute' not in group_names"


- name: configure sysctl parameters for networking
  block:
    - name: load br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: configure sysctl parameters
      ansible.builtin.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: yes
      loop:
        - { name: net.ipv4.conf.all.rp_filter, value: 0 }
        - { name: net.ipv4.conf.default.rp_filter, value: 0 }
        - { name: net.bridge.bridge-nf-call-iptables, value: 1 }
        - { name: net.bridge.bridge-nf-call-ip6tables, value: 1 }

    - name: apply sysctl settings
      ansible.builtin.command:
        cmd: sysctl -p

- name: install and configure neutron service
  block: 
    - name: install packages
      ansible.builtin.dnf:
        name: "{{ neutron_compute_packages }}"
        state: latest

    - name: configure neutron conf
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: "{{ neutron_conf_template_path.compute_neutron_conf }}",dest: "{{ neutron_conf_path.neutron_conf }}" }
        - { src: "{{ neutron_conf_template_path.compute_openvswitch_conf }}",dest: "{{ neutron_conf_path.openvswitch_conf }}" }


    - name: conf nova to use neutron
      community.general.ini_file:
        path: "{{ neutron_conf_path.nova_conf }}"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      loop:
        - { section: DEFAULT,option: linuxnet_interface_driver,value: nova.network.linux_net.LinuxOVSlnterfaceDriver }
        - { section: DEFAULT,option: vif_plugging_is_fatal,value: true }
        - { section: DEFAULT,option: vif_plugging_timeout,value: 300 }
        - { section: neutron,option: auth_url ,value: "http://controller:5000" }
        - { section: neutron,option: auth_type,value: password }
        - { section: neutron,option: project_domain_name,value: default }
        - { section: neutron,option: user_domain_name,value: default }
        - { section: neutron,option: region_name,value: RegionOne }
        - { section: neutron,option: project_name,value: service }
        - { section: neutron,option: username,value: neutron }
        - { section: neutron,option: password,value: "{{ openstack_user_password.neutron }}" }

    - name: restart openstack-nova-compute
      ansible.builtin.service:
        name: openstack-nova-compute
        state: restarted
        enabled: yes

    - name: restart openvswitch-agent
      ansible.builtin.service:
        name: neutron-openvswitch-agent
        state: restarted
        enabled: yes

